#version 130


in vec4 v;
in vec2 selfCoord;

out uvec4 fragColor;
// in uint volume;

uniform usampler2D lastTick;
uniform usampler2D connectionMap;
uniform float time;

int maxCapacity;
// uint maxVolumes;

int getSliceShift(int volume, int capacity) {
    // random is a value in the range 0..1 (excluding 1)
    // it is generated by taking the fractional bits of a
    // high amplitude, high frequency sin wave based on the input and time
        float random = fract(43758.5453 * sin(
            time * float(volume) * 22.3898
        ));
    return int(floor(capacity * random));
}


bool chance(float probability, float seed) {
    float random = fract(23758.3453 * sin(
        time * seed * 42.7898
    ));
    return random < probability;
}

// // if v is in the range -1..1
// // move it to 0..1
// vec4 to01(vec4 v) {
//     return (v + vec4(1.0)) * 0.5;
// }

// get what we are connected to
ivec2 getTarget(ivec2 origin) {
    // TODO: capacity per volume

    ivec2 originShifted = origin;
    originShifted.x += getSliceShift(origin.y, maxCapacity);
    originShifted.x = originShifted.x % maxCapacity;


    uvec4 connectionInfo = texelFetch(connectionMap, originShifted, 0);
    ivec2 target = ivec2(connectionInfo.xy);
    // TODO: optimize this out by building a better map
    if (target.y == 0) {
        return origin;
    }

    target.x += maxCapacity;  // guarantee we don't get negative values
    target.x -= getSliceShift(int(target.y), maxCapacity);
    target.x = target.x % maxCapacity;

    // have a chance o not swapping
    ivec2 lower;
    if (target.y < origin.y) lower = target;
    else                     lower = origin;
    if (chance(0.5, float(lower.x))) {
        return target;
    }
    else {
        return origin;
    }

}

void main() {
    // uvec4 prev = texelFetch(lastTick, ivec2(selfCoord), 0);
    // fragColor = prev;
    fragColor = uvec4(
        0u,
        0u,
        0u,
        255u
    );

    ivec2 size_lastTick = textureSize(lastTick, 0);
    maxCapacity = size_lastTick.x;
    // maxVolumes  = uint(size_lastTick.y);


    // if (texelFetch(connectionMap, ivec2(selfCoord), 0).z == 0u) {
    //     fragColor.r = 255u;
    // }

    ivec2 origin = ivec2(selfCoord);
    ivec2 target = getTarget(origin);

    fragColor = texelFetch(lastTick, target, 0);

    // // confirm that we end up at ourselves if we follow the map from the target
    // ivec2 backlink = getTarget(target);
    // if (backlink != origin) {
    //     fragColor.b = 255u;
    // }


    // fragColor.rg = uvec2();
    // fragColor.b = 0u;
    // fragColor.a = 255u;
}
